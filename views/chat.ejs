<%- include("./partials/header") %>
<div id="chat-container">
    <h2>Private Chat with <a href="/user/<%=recipient.id%>"><%= recipient.username %> </a> </h2>
    <ul id="messages"></ul>
    
    <form id="chat-form">
        You: <%= user.username %><br>
        <textarea id="m" name="message" rows="2" placeholder="Type a message..." autocomplete="off" style="resize: vertical; width: 90%;"></textarea>
        <p><button type="submit">Send</button></p>
    </form>

</div>

<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();

    const senderId = "<%= user._id %>";
    const senderUsername = "<%= user.username %>";
    const recipientId = "<%= recipient._id %>";
    const recipientUsername = "<%= recipient.username %>";

    socket.emit("register user", {
    userId: senderId,
    recipientId: recipientId
});


    const form = document.getElementById("chat-form");
    const input = document.getElementById("m");
    const messages = document.getElementById("messages");

    form.addEventListener("submit", function(e) {
        e.preventDefault();
        const message = input.value.trim();

        if (message) {
            socket.emit("private message", {
                from: senderId,
                to: recipientId,
                message: message
            });
            input.value = "";
        }
    });

    socket.on("private message", function(msg) {
        const item = document.createElement("li");
        if (msg.from === senderId) {
            item.textContent = `You: ${msg.message}`;
            item.classList.add("my-message");
        } else {
            item.textContent = `${recipientUsername}: ${msg.message}`;
            item.classList.add("their-message");
        }
        messages.appendChild(item);
        messages.scrollTop = messages.scrollHeight;
    });


    socket.on("chat history", function(history) {
        messages.innerHTML = "";
        history.forEach((msg) => {
            const item = document.createElement("li");
            if (msg.from === senderId) {
                item.textContent = `You: ${msg.message}`;
                item.classList.add("my-message");
            } else {
                item.textContent = `${recipientUsername}: ${msg.message}`;
                item.classList.add("their-message");
            }
            messages.appendChild(item);
        });
        messages.scrollTop = messages.scrollHeight;
    });

    socket.on("new inbox notification", (data) => {
        // Show red dot, play sound, or popup preview
        console.log("New message notification from:", data.from);
        showInboxNotification(data); // Your UI handler
    });
</script>

<%- include("./partials/footer") %>



